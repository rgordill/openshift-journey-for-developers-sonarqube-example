apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
spec:
  selector:
    matchLabels:
      app: sonarqube
      release: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
        release: sonarqube
    spec:
      containers:
      - name: sonarqube
        image: sonarqube:10.0.0-community
        env:
        - name: SONAR_JDBC_URL
          value: jdbc:postgresql://postgresql.my-namespace.svc.cluster.local:5432/dbsample
        - name: SONAR_JDBC_USERNAME
          value: user
        - name: SONAR_JDBC_PASSWORD
          value: password
        ports:
        - containerPort: 9000
          protocol: TCP
        resources:
          requests:
            memory: "1024Mi"
            cpu: "250m"
          limits:
            memory: "4096Mi"
            cpu: "1"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              host="$(hostname -i || echo '127.0.0.1')"
              reply=$(wget --no-proxy -qO- --header="X-Sonar-Passcode: $SONAR_WEB_SYSTEMPASSCODE" http://${host}:9000/api/system/liveness 2>&1)
              if [ -z "$reply" ]; then exit 0; else exit 1; fi
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 6
          timeoutSeconds: 1
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              #!/bin/bash
              # A Sonarqube container is considered ready if the status is UP, DB_MIGRATION_NEEDED or DB_MIGRATION_RUNNING
              # status about migration are added to prevent the node to be kill while sonarqube is upgrading the database.
              host="$(hostname -i || echo '127.0.0.1')"
              if wget --no-proxy -qO- http://${host}:9000/api/system/status | grep -q -e '"status":"UP"' -e '"status":"DB_MIGRATION_NEEDED"' -e '"status":"DB_MIGRATION_RUNNING"'; then
                exit 0
              fi
              exit 1
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 6
          timeoutSeconds: 1
        startupProbe:
          httpGet:
            scheme: HTTP
            path: /api/system/status
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 24
          timeoutSeconds: 1
